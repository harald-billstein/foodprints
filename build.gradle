buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "com.moowork.gradle:gradle-node-plugin:1.1.1"
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
    }
}

plugins {
    id "com.moowork.node" version "1.1.1"
}

node {
    version = '5.7.0'
    npmVersion = '3.9.2'
    download = true
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.asciidoctor.convert'

jar {
    baseName = 'reactjs-spring-data-rest-gradle'
    version = '0.0.1-SNAPSHOT'
}

group = 'com.jayway'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.10
targetCompatibility = 1.10

repositories {
    mavenCentral()
}

asciidoctor {
    sourceDir = file('build/generated-snippets/')
    sources { include 'api.guide.adoc' }
    outputDir "src/main/resources/templates"
}

dependencies {

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    runtime('com.h2database:h2')
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8'
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.22.0'
    compile group: 'org.javassist', name: 'javassist', version: '3.23.1-GA'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.restdocs:spring-restdocs-mockmvc")
}

bootRun {
    systemProperties System.properties
    //systemProperties.remove("java.endorsed.dirs")
}


task webpack(type: NodeTask, dependsOn: 'npmInstall') {
    script = project.file('node_modules/.bin/webpack')
}
task webpackClean(type: Delete) {
    delete './src/main/resources/static/built'
}
clean.dependsOn webpackClean

task npmClean (type: Delete) { delete './node_modules' }

processResources.dependsOn 'webpack'

task cleanAll(dependsOn: [clean, npmClean] )


